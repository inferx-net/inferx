# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import na_pb2 as na__pb2


class SchedulerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LeaseWorker = channel.unary_unary(
                '/na.SchedulerService/LeaseWorker',
                request_serializer=na__pb2.LeaseWorkerReq.SerializeToString,
                response_deserializer=na__pb2.LeaseWorkerResp.FromString,
                )
        self.ReturnWorker = channel.unary_unary(
                '/na.SchedulerService/ReturnWorker',
                request_serializer=na__pb2.ReturnWorkerReq.SerializeToString,
                response_deserializer=na__pb2.ReturnWorkerResp.FromString,
                )


class SchedulerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LeaseWorker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReturnWorker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchedulerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LeaseWorker': grpc.unary_unary_rpc_method_handler(
                    servicer.LeaseWorker,
                    request_deserializer=na__pb2.LeaseWorkerReq.FromString,
                    response_serializer=na__pb2.LeaseWorkerResp.SerializeToString,
            ),
            'ReturnWorker': grpc.unary_unary_rpc_method_handler(
                    servicer.ReturnWorker,
                    request_deserializer=na__pb2.ReturnWorkerReq.FromString,
                    response_serializer=na__pb2.ReturnWorkerResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'na.SchedulerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SchedulerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LeaseWorker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/na.SchedulerService/LeaseWorker',
            na__pb2.LeaseWorkerReq.SerializeToString,
            na__pb2.LeaseWorkerResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReturnWorker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/na.SchedulerService/ReturnWorker',
            na__pb2.ReturnWorkerReq.SerializeToString,
            na__pb2.ReturnWorkerResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class NodeAgentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreatePod = channel.unary_unary(
                '/na.NodeAgentService/CreatePod',
                request_serializer=na__pb2.CreatePodReq.SerializeToString,
                response_deserializer=na__pb2.CreatePodResp.FromString,
                )
        self.GetPod = channel.unary_unary(
                '/na.NodeAgentService/GetPod',
                request_serializer=na__pb2.GetPodReq.SerializeToString,
                response_deserializer=na__pb2.GetPodResp.FromString,
                )
        self.TerminatePod = channel.unary_unary(
                '/na.NodeAgentService/TerminatePod',
                request_serializer=na__pb2.TerminatePodReq.SerializeToString,
                response_deserializer=na__pb2.TerminatePodResp.FromString,
                )
        self.HibernatePod = channel.unary_unary(
                '/na.NodeAgentService/HibernatePod',
                request_serializer=na__pb2.HibernatePodReq.SerializeToString,
                response_deserializer=na__pb2.HibernatePodResp.FromString,
                )
        self.SnapshotPod = channel.unary_unary(
                '/na.NodeAgentService/SnapshotPod',
                request_serializer=na__pb2.SnapshotPodReq.SerializeToString,
                response_deserializer=na__pb2.SnapshotPodResp.FromString,
                )
        self.WakeupPod = channel.unary_unary(
                '/na.NodeAgentService/WakeupPod',
                request_serializer=na__pb2.WakeupPodReq.SerializeToString,
                response_deserializer=na__pb2.WakeupPodResp.FromString,
                )
        self.ResumePod = channel.unary_unary(
                '/na.NodeAgentService/ResumePod',
                request_serializer=na__pb2.ResumePodReq.SerializeToString,
                response_deserializer=na__pb2.ResumePodResp.FromString,
                )
        self.NodeConfig = channel.unary_unary(
                '/na.NodeAgentService/NodeConfig',
                request_serializer=na__pb2.NodeConfigReq.SerializeToString,
                response_deserializer=na__pb2.NodeConfigResp.FromString,
                )
        self.CreateFuncPod = channel.unary_unary(
                '/na.NodeAgentService/CreateFuncPod',
                request_serializer=na__pb2.CreateFuncPodReq.SerializeToString,
                response_deserializer=na__pb2.CreateFuncPodResp.FromString,
                )
        self.ReadPodLog = channel.unary_unary(
                '/na.NodeAgentService/ReadPodLog',
                request_serializer=na__pb2.ReadPodLogReq.SerializeToString,
                response_deserializer=na__pb2.ReadPodLogResp.FromString,
                )
        self.RemoveSnapshot = channel.unary_unary(
                '/na.NodeAgentService/RemoveSnapshot',
                request_serializer=na__pb2.RemoveSnapshotReq.SerializeToString,
                response_deserializer=na__pb2.RemoveSnapshotResp.FromString,
                )


class NodeAgentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreatePod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TerminatePod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HibernatePod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SnapshotPod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WakeupPod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumePod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NodeConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFuncPod(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadPodLog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveSnapshot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NodeAgentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreatePod': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePod,
                    request_deserializer=na__pb2.CreatePodReq.FromString,
                    response_serializer=na__pb2.CreatePodResp.SerializeToString,
            ),
            'GetPod': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPod,
                    request_deserializer=na__pb2.GetPodReq.FromString,
                    response_serializer=na__pb2.GetPodResp.SerializeToString,
            ),
            'TerminatePod': grpc.unary_unary_rpc_method_handler(
                    servicer.TerminatePod,
                    request_deserializer=na__pb2.TerminatePodReq.FromString,
                    response_serializer=na__pb2.TerminatePodResp.SerializeToString,
            ),
            'HibernatePod': grpc.unary_unary_rpc_method_handler(
                    servicer.HibernatePod,
                    request_deserializer=na__pb2.HibernatePodReq.FromString,
                    response_serializer=na__pb2.HibernatePodResp.SerializeToString,
            ),
            'SnapshotPod': grpc.unary_unary_rpc_method_handler(
                    servicer.SnapshotPod,
                    request_deserializer=na__pb2.SnapshotPodReq.FromString,
                    response_serializer=na__pb2.SnapshotPodResp.SerializeToString,
            ),
            'WakeupPod': grpc.unary_unary_rpc_method_handler(
                    servicer.WakeupPod,
                    request_deserializer=na__pb2.WakeupPodReq.FromString,
                    response_serializer=na__pb2.WakeupPodResp.SerializeToString,
            ),
            'ResumePod': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumePod,
                    request_deserializer=na__pb2.ResumePodReq.FromString,
                    response_serializer=na__pb2.ResumePodResp.SerializeToString,
            ),
            'NodeConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.NodeConfig,
                    request_deserializer=na__pb2.NodeConfigReq.FromString,
                    response_serializer=na__pb2.NodeConfigResp.SerializeToString,
            ),
            'CreateFuncPod': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFuncPod,
                    request_deserializer=na__pb2.CreateFuncPodReq.FromString,
                    response_serializer=na__pb2.CreateFuncPodResp.SerializeToString,
            ),
            'ReadPodLog': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadPodLog,
                    request_deserializer=na__pb2.ReadPodLogReq.FromString,
                    response_serializer=na__pb2.ReadPodLogResp.SerializeToString,
            ),
            'RemoveSnapshot': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveSnapshot,
                    request_deserializer=na__pb2.RemoveSnapshotReq.FromString,
                    response_serializer=na__pb2.RemoveSnapshotResp.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'na.NodeAgentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NodeAgentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreatePod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/na.NodeAgentService/CreatePod',
            na__pb2.CreatePodReq.SerializeToString,
            na__pb2.CreatePodResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/na.NodeAgentService/GetPod',
            na__pb2.GetPodReq.SerializeToString,
            na__pb2.GetPodResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TerminatePod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/na.NodeAgentService/TerminatePod',
            na__pb2.TerminatePodReq.SerializeToString,
            na__pb2.TerminatePodResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HibernatePod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/na.NodeAgentService/HibernatePod',
            na__pb2.HibernatePodReq.SerializeToString,
            na__pb2.HibernatePodResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SnapshotPod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/na.NodeAgentService/SnapshotPod',
            na__pb2.SnapshotPodReq.SerializeToString,
            na__pb2.SnapshotPodResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WakeupPod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/na.NodeAgentService/WakeupPod',
            na__pb2.WakeupPodReq.SerializeToString,
            na__pb2.WakeupPodResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResumePod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/na.NodeAgentService/ResumePod',
            na__pb2.ResumePodReq.SerializeToString,
            na__pb2.ResumePodResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NodeConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/na.NodeAgentService/NodeConfig',
            na__pb2.NodeConfigReq.SerializeToString,
            na__pb2.NodeConfigResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateFuncPod(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/na.NodeAgentService/CreateFuncPod',
            na__pb2.CreateFuncPodReq.SerializeToString,
            na__pb2.CreateFuncPodResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadPodLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/na.NodeAgentService/ReadPodLog',
            na__pb2.ReadPodLogReq.SerializeToString,
            na__pb2.ReadPodLogResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveSnapshot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/na.NodeAgentService/RemoveSnapshot',
            na__pb2.RemoveSnapshotReq.SerializeToString,
            na__pb2.RemoveSnapshotResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
