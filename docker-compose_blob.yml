services:
  spdk:
    image: inferx/spdk-container2:v0.1.0
    restart: always
    container_name: spdk
    privileged: true
    environment:
      - HUGEMEM=64000
    volumes:
      - /dev/hugepages:/dev/hugepages
      - /lib/modules/:/lib/modules/
      - /opt/inferx/:/opt/inferx/
      - /run/udev:/run/udev
  secret_db:
    image: postgres:14.5
    restart: unless-stopped
    container_name: secret_db
    environment:
      - POSTGRES_USER=secret
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=secretdb
      - PGDATA=/data/postgres
    ports:
      - '5431:5432'
    volumes:
      - /opt/inferx/config/secret.sql:/docker-entrypoint-initdb.d/db.sql
      - /opt/inferx/data/postgres_secret:/data/postgres
  db:
    image: postgres:14.5
    restart: unless-stopped
    container_name: db
    environment:
      - POSTGRES_USER=audit_user
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=auditdb
      - PGDATA=/data/postgres
    ports:
      - '5432:5432'
    volumes:
      - /opt/inferx/config/create_table.sql:/docker-entrypoint-initdb.d/db.sql
      - /opt/inferx/data/postgres:/data/postgres
  etcd:
    image: quay.io/coreos/etcd:v3.5.13
    restart: unless-stopped
    container_name: etcd
    volumes:
      - /opt/inferx/data/etcd:/opt/inferx/data/etcd
    command:
      - etcd
      - --name=etcd-00
      - --data-dir=/opt/inferx/data/etcd
      - --advertise-client-urls=http://etcd-00:2379
      - --listen-client-urls=http://0.0.0.0:2379
      - --initial-advertise-peer-urls=http://etcd-00:2380
      - --listen-peer-urls=http://0.0.0.0:2380
      - --initial-cluster=etcd-00=http://etcd-00:2380
    ports:
      - '2379:2379'
      - '2380:2380'
  inferx:
    image: inferx/inferx_one:${Version}
    shm_size: '2gb'
    restart: always
    container_name: inferx_one
    privileged: true
    user: root
    network_mode: "host"
    environment:
      - NODE_NAME=${HOSTNAME}
      - POD_IP=${LOCAL_IP}
      - INFERX_ADMIN_APIKEY=87831cdb-d07a-4dc1-9de0-fb232c9bf286
      - RUN_SERVICE=All
      - ALLOC_CPU=24
      - ALLOC_MEMORY=180Gi
      - CACHE_MEMORY=50Gi
      - ENABLE_2MB_PAGE=true
      - ENALBE_BLOB=true
      - BLOB_BUFF=4Gi
      - PEER_LOAD=true
      - CONTEXT_COUNT=1
    pid: "host"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4000" ]
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      db:
        condition: service_started
      etcd:
        condition: service_started
      keycloak:
        condition: service_started
      spdk:
        condition: service_started
      secret_db:
        condition: service_started
    volumes:
      - /opt/inferx/bin:/opt/inferx/bin
      - /opt/inferx/config:/opt/inferx/config
      - /opt/inferx/data:/opt/inferx/data
      - /opt/inferx/log:/opt/inferx/log
      - /opt/inferx/cache:/opt/inferx/cache
      - /opt/inferx/snapshot:/opt/inferx/snapshot
      - /opt/inferx/work:/opt/inferx/work
      # - /opt/inferx/:/opt/inferx/
      - /opt/inferx/dind:/var/lib/docker
      - /run/udev:/run/udev
      - /dev/hugepages:/dev/hugepages
      - /etc/letsencrypt/:/etc/letsencrypt/
      # - /var/run/docker/runtime-runc/moby/:/var/run/docker/runtime-runc/moby/ 
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all # alternatively, use `count: all` for all GPUs
              capabilities: [ gpu ]
    command:
      - /opt/inferx/config/node3.json
  dashboard:
    image: inferx/inferx_dashboard:${Version}
    restart: on-failure
    container_name: inferx_dashboard
    network_mode: "host"
    environment:
      - KEYCLOAK_URL=http://${LOCAL_IP}:1260/authn
      - KEYCLOAK_REALM_NAME=inferx
      - KEYCLOAK_CLIENT_ID=infer_client
      - KEYCLOAK_CLIENT_SECRET=M2Dse5531tdtyipZdGizLEeoOVgziQRX
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://127.0.0.1:1250/demo/listnode" ]
      interval: 10s
      timeout: 10s
      retries: 3
    depends_on:
      - db
      - etcd
      - keycloak
    volumes:
      - /etc/letsencrypt/:/etc/letsencrypt/
  keycloak-postgres:
    image: postgres:14.5

    restart: unless-stopped
    container_name: keycloak_db
    environment:
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=keycloak
      - PGDATA=/data/postgres
    networks:
      - keycloak-network
    volumes:
      - /opt/inferx/data/postgres_keycloak:/data/postgres
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    restart: on-failure
    container_name: keycloak
    # network_mode: "host"
    networks:
      - keycloak-network
    ports:
      - '1260:8080'
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=123456
      - KC_PROXY=edge
      - KC_HTTP_ENABLED=true
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HOSTNAME_STRICT=false
      - KC_PROXY_ADDRESS_FORWARDING=true
      - KC_PROXY_HEADERS=xforwarded
      - KC_HTTP_RELATIVE_PATH=/authn
    depends_on:
      keycloak-postgres:
        condition: service_started
    command:
      - start-dev
      - --verbose
networks:
  keycloak-network:
    driver: bridge
